print("Hello World")
install.packages("caTools")
library("caTools", lib.loc="~/R/win-library/3.3")
library(caTools)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
#Data PreProcessing
#Import the dataset
dataset = read.csv('Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age
)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary
)
#Enconde categorical data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
# Splitting the dataset into the training set and Test set
# instal.package('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
#Data PreProcessing
#Import the dataset
dataset = read.csv('Data.csv')
load("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/1. Data Preprocessing/.RData")
#Data PreProcessing
#Import the dataset
dataset = read.csv('Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age
)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary
)
#Enconde categorical data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
# Splitting the dataset into the training set and Test set
# instal.package('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
View(dataset)
View(dataset)
#Data PreProcessing
#Import the dataset
dataset = read.csv('Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age
)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary
)
#Enconde categorical data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
View(dataset)
View(dataset)
#Data PreProcessing
#Import the dataset
dataset = read.csv('Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age
)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary
)
#Enconde categorical data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
View(dataset)
View(dataset)
View(dataset)
#Import the dataset
dataset = read.csv('Data.csv')
load("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/1. Data Preprocessing/Data.csv")
#Data PreProcessing
#Import the dataset
dataset = read.csv('Data.csv')
load("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/1. Data Preprocessing/data_preprocessing_template.R")
load("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/1. Data Preprocessing/Data.csv")
load("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/1. Data Preprocessing/.RData")
View(dataset)
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
View(dataset)
View(dataset)
train_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(train_set)
View(train_set)
View(test_set)
View(train_set)
train_set[, 2:3] = scale(train_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
# Simple Linear Regression
# Importing the dataset
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
setwd("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/2. Modeling/Simple-Linear-Regression/Simple_Linear_Regression")
# Simple Linear Regression
# Importing the dataset
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
save.image("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/2. Modeling/Simple-Linear-Regression/Simple_Linear_Regression/simple_linear_regression.RData")
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
View(training_set)
y_pred
View(training_set)
View(training_set)
View(test_set)
View(test_set)
install.packages('ggplot2')
library(ggplot2)
save.image("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/2. Modeling/Simple-Linear-Regression/Simple_Linear_Regression/simple_linear_regression.RData")
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
setwd("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/2. Modeling/Multiple-Linear-Regression/Multiple_Linear_Regression")
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
save.image("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/2. Modeling/Multiple-Linear-Regression/Multiple_Linear_Regression/multiple_linear_regression.RData")
View(dataset)
View(dataset)
View(test_set)
View(training_set)
View(dataset)
sumary(regressor)
summary(regressor)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Market.Spend + State,
data = training_set)
View(dataset)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
save.image("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/2. Modeling/Multiple-Linear-Regression/Multiple_Linear_Regression/multiple_linear_regression.RData")
save.image("C:/Users/Leo/OneDrive/Documentos/Data Science/Machine Learning/2. Modeling/Multiple-Linear-Regression/Multiple_Linear_Regression/multiple_linear_regression.RData")
